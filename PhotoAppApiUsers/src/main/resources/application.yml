server:
  port: ${PORT:0}

token:
  secret: cUQNOIVMSBIR0o1AgypHXGAPICAFIRmQbHwoVQUZjhs=
  expiry: 36000001

spring:
  application:
    name: users-ws
  config:
    import: optional:configserver:http://localhost:8012
    name: users-ws
  datasource:
    url: jdbc:postgresql://localhost:5432/photo_app
    username: developer1
    password: dev1234
  devtools:
    restart:
      enabled: true
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update

  rabbitmq:
    host: localhost
    port: 5672
    username: developer
    password: dev123

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8010/eureka
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

management:
  endpoint:
    health:
      show-details: always
      enabled: true
  endpoints:
    web:
      exposure:
        include: beans,health,httptrace,info,metrics,circuitbreakers,circuitbreakerevents
  info:
    env:
      enabled: true
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

logging:
  level:
    org:
      springframework:
        web: DEBUG
        security: DEBUG
    com:
      afroze:
        photoapp:
          api:
            users:
              data:
                AlbumsServiceClient: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      albums-ws:
        failure-rate-threshold: 50
        automatic-transition-from-open-to-half-open-enabled: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 2
        minimum-number-of-calls: 1
        event-consumer-buffer-size: 10
        wait-duration-in-open-state: 10s
    circuit-breaker-aspect-order: 1
  retry:
    instances:
      albums-ws:
        max-attempts: 3
        wait-duration: 1s
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 5
    retry-aspect-order: 2

info:
  application:
    name: ${spring.application.name}
